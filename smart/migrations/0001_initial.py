# Generated by Django 5.2.3 on 2025-06-14 13:02

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128, verbose_name='活动标题')),
                ('text', models.TextField(blank=True, null=True, verbose_name='活动描述')),
                ('date', models.DateField(verbose_name='举办活动日期')),
                ('count', models.IntegerField(default=0, verbose_name='报名人数')),
                ('total_count', models.IntegerField(default=0, verbose_name='总人数')),
                ('score', models.IntegerField(default=0, verbose_name='积分')),
            ],
            options={
                'verbose_name_plural': '活动表',
            },
        ),
        migrations.CreateModel(
            name='Banner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(default='banner1.png', upload_to='banner', verbose_name='图片')),
                ('order', models.IntegerField(verbose_name='顺序')),
                ('create_time', models.DateTimeField(auto_now=True, verbose_name='创建时间')),
                ('is_delete', models.BooleanField(default=False, verbose_name='是否删除')),
            ],
            options={
                'verbose_name_plural': '轮播图',
            },
        ),
        migrations.CreateModel(
            name='Company_Detail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img_header', models.ImageField(default='/banner1.png', upload_to='company_datail', verbose_name='标题图片')),
                ('img_detail_header', models.ImageField(default='/banner1.png', upload_to='company_datail', verbose_name='介绍内容标题图片')),
                ('img_detail_detail', models.ImageField(default='/banner1.png', upload_to='company_datail', verbose_name='介绍内容图片')),
                ('name', models.CharField(max_length=100, verbose_name='介绍标题')),
                ('order', models.IntegerField(verbose_name='顺序')),
                ('create_time', models.DateTimeField(auto_now=True, verbose_name='创建时间')),
                ('is_delete', models.BooleanField(default=False, verbose_name='是否删除')),
            ],
            options={
                'verbose_name_plural': '介绍表',
            },
        ),
        migrations.CreateModel(
            name='Copyright',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='版权标题')),
                ('img', models.ImageField(upload_to='copyright', verbose_name='版权图片')),
                ('description', models.CharField(max_length=250, verbose_name='版权信息')),
                ('categoryName', models.CharField(max_length=50, verbose_name='版权类别')),
                ('order', models.IntegerField(verbose_name='顺序')),
            ],
            options={
                'verbose_name_plural': '版权',
            },
        ),
        migrations.CreateModel(
            name='Map',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128, verbose_name='活动标题')),
                ('map_detail', models.ImageField(upload_to='map', verbose_name='地图')),
                ('order', models.IntegerField(verbose_name='顺序')),
            ],
            options={
                'verbose_name_plural': '地图',
            },
        ),
        migrations.CreateModel(
            name='Notice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=64, verbose_name='公共标题')),
                ('content', models.TextField(verbose_name='内容')),
                ('img', models.ImageField(default='notice.png', upload_to='notice', verbose_name='公告图片')),
                ('create_time', models.DateTimeField(auto_now=True, verbose_name='创建时间')),
            ],
            options={
                'verbose_name_plural': '公告表',
            },
        ),
        migrations.CreateModel(
            name='UserInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, verbose_name='姓名')),
                ('avatar', models.FileField(max_length=128, upload_to='avatar', verbose_name='头像')),
                ('create_date', models.DateField(auto_now_add=True, verbose_name='日期')),
                ('score', models.IntegerField(default=0, verbose_name='积分')),
                ('mobile', models.CharField(max_length=11, null=True, verbose_name='手机号')),
            ],
            options={
                'verbose_name_plural': '用户表',
            },
        ),
        migrations.CreateModel(
            name='JoinRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exchange', models.BooleanField(default=False, verbose_name='是否已兑换')),
                ('activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ac', to='smart.activity', verbose_name='活动')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='smart.userinfo', verbose_name='用户')),
            ],
            options={
                'verbose_name_plural': '活动报名记录',
            },
        ),
        migrations.AddField(
            model_name='activity',
            name='join_record',
            field=models.ManyToManyField(through='smart.JoinRecord', through_fields=('activity', 'user'), to='smart.userinfo', verbose_name='参与者'),
        ),
    ]
